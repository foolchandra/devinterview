# Generated by Django 2.2 on 2019-12-30 00:21

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('featured_image', models.URLField()),
                ('promo', models.TextField()),
                ('headline', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('disclosure', models.TextField()),
                ('publish_at', models.DateTimeField(default=datetime.datetime.now)),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('modified', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_id', models.IntegerField()),
                ('primary', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('byline', models.CharField(max_length=200)),
                ('short_bio', models.TextField()),
                ('long_bio', models.TextField(null=True)),
                ('small_avatar_url', models.URLField()),
                ('large_avatar_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Bureau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Pitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pitch_id', models.CharField(max_length=100)),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StockQuote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote_id', models.IntegerField()),
                ('company_name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=5)),
                ('description', models.CharField(max_length=500)),
                ('current_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('change_percent', models.DecimalField(decimal_places=4, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fool.Article')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fool.Tag')),
            ],
            options={
                'unique_together': {('article', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='ArticleAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary_author', models.BooleanField(default=False)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fool.Article')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fool.Author')),
            ],
            options={
                'unique_together': {('article', 'author')},
            },
        ),
        migrations.AddField(
            model_name='article',
            name='authors',
            field=models.ManyToManyField(through='fool.ArticleAuthor', to='fool.Author'),
        ),
        migrations.AddField(
            model_name='article',
            name='bureau',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fool.Bureau'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fool.Category'),
        ),
        migrations.AddField(
            model_name='article',
            name='pitch',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fool.Pitch'),
        ),
        migrations.AddField(
            model_name='article',
            name='stock_quotes',
            field=models.ManyToManyField(to='fool.StockQuote'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(through='fool.ArticleTag', to='fool.Tag'),
        ),
    ]
